<uctl:OpenableObservableControl
	x:Class="LolloGPS.Core.CustomMapsPanel"
	x:Name="me"
	xmlns:uctl="using:Utilz.Controlz"
    xmlns:mctl="using:LolloGPS.Controlz"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="using:LolloGPS.Core"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	UseLayoutRounding="True"
	mc:Ignorable="d"
	d:DesignHeight="600"
	d:DesignWidth="400">

    <Grid Background="{ThemeResource FlyoutBackgroundThemeBrush}" x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="{StaticResource GridSize4Placeholder_Medium}"/>
        </Grid.ColumnDefinitions>
        <!-- captions -->
        <TextBlock Grid.ColumnSpan="2"
            Text="Model tile source (optional): "
			TextWrapping="Wrap"
			Style="{StaticResource BaseMessageStyle}"
			VerticalAlignment="Center"/>
        <TextBlock Grid.Row="1" Text="Name: "
			TextWrapping="Wrap"
			Style="{StaticResource BaseMessageStyle}"
			VerticalAlignment="Center"/>
        <TextBlock Grid.Row="2" Grid.ColumnSpan="3" Text="Toggle local / remote source: "
			TextWrapping="Wrap"
			Style="{StaticResource BaseMessageStyle}"
			VerticalAlignment="Center"/>
        <TextBlock Grid.Row="3" Text="Local folder: "
			TextWrapping="Wrap"
			Style="{StaticResource BaseMessageStyle}"
			VerticalAlignment="Center"
            Visibility="{x:Bind MapsPanelVM.PersistentData.TestTileSource.IsFileSource, Mode=OneWay, Converter={StaticResource BooleanToVisibleConverter}}"/>
        <TextBlock Grid.Row="4" Text="File name: "
			TextWrapping="Wrap"
			Style="{StaticResource BaseMessageStyle}"
			VerticalAlignment="Center"
            Visibility="{x:Bind MapsPanelVM.PersistentData.TestTileSource.IsFileSource, Mode=OneWay, Converter={StaticResource BooleanToVisibleConverter}}"/>
        <TextBlock Grid.Row="4" Text="Uri(s): "
			TextWrapping="Wrap"
			Style="{StaticResource BaseMessageStyle}"
			VerticalAlignment="Center"
            Visibility="{x:Bind MapsPanelVM.PersistentData.TestTileSource.IsFileSource, Mode=OneWay, Converter={StaticResource BooleanToCollapsedConverter}}"/>
        <TextBlock Grid.Row="5" Text="Web request headers: "
			TextWrapping="Wrap"
			Style="{StaticResource BaseMessageStyle}"
			VerticalAlignment="Center"
            Visibility="{x:Bind MapsPanelVM.PersistentData.TestTileSource.IsFileSource, Mode=OneWay, Converter={StaticResource BooleanToCollapsedConverter}}"/>
        <TextBlock Grid.Row="6" Text="Min zoom: "
			TextWrapping="Wrap"
			Style="{StaticResource BaseMessageStyle}"
			VerticalAlignment="Center"/>
        <TextBlock Grid.Row="6" Grid.Column="2" Text="Max zoom: "
			TextWrapping="Wrap"
			Style="{StaticResource BaseMessageStyle}"			
			VerticalAlignment="Center"
            Margin="8,2,2,2"/>
        <TextBlock Grid.Row="7" Text="Tile size (px): "
			TextWrapping="Wrap"
			Style="{StaticResource BaseMessageStyle}"
			VerticalAlignment="Center"/>
        <TextBlock Grid.Row="7" Grid.Column="2" Text="Overlay layer:"
            TextWrapping="Wrap"
			Style="{StaticResource BaseMessageStyle}"
            VerticalAlignment="Center"
            Margin="8,2,2,2"/>
        <TextBlock Grid.Row="9" Grid.ColumnSpan="3" Text="Use this source"
			TextWrapping="Wrap"
            Style="{StaticResource BaseMessageStyle}"
            VerticalAlignment="Center"/>
        <TextBlock Grid.Row="11" Grid.ColumnSpan="3" Text="Erase custom sources"
            TextWrapping="Wrap"
            Style="{StaticResource BaseMessageStyle}"
			VerticalAlignment="Center"/>

        <!-- values -->
        <uctl:LolloMultipleListChooser Grid.Column="2" Grid.ColumnSpan="2"
			x:Name="PickCustomTileSourceChooser"
            BackPressedRaiser="{x:Bind Path=MainVM, Mode=OneWay}"
			ItemSelected="OnPickCustomTileSourceChooser_ItemSelected"
            ItemsSource="{x:Bind MapsPanelVM.PersistentData.TileSourcez, Converter={StaticResource TileSourcezToTextAndTagsConverter}, ConverterParameter=forPickingTileSource, Mode=OneWay}"
            ListHeaderText="Pick a tile source"
            Margin="{StaticResource Thickness2}"
            PlaceholderText="Pick a tile source"
			PopupContainer="{x:Bind LayoutRoot, Mode=OneWay}"
            SelectedItems="{x:Bind MapsPanelVM.ModelTileSources, Mode=OneWay}"
            VerticalAlignment="Center"/>

        <TextBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3"
			Text="{Binding ElementName=me, Path=MapsPanelVM.PersistentData.TestTileSource.TechName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
			TextWrapping="Wrap"
			MaxLength="{x:Bind MapsPanelVM.PersistentData.TestTileSource.MaxTechNameLengthProp, Mode=OneWay}"
			VerticalAlignment="Center"/>
        <mctl:ToggleButtonLollo Grid.Row="2" Grid.Column="3"
            VerticalAlignment="Center"
            IsChecked="{x:Bind MapsPanelVM.PersistentData.TestTileSource.IsFileSource, Mode=OneWay, FallbackValue=False}"
            Click="OnToggleLocalRemote_Click"
			Style="{StaticResource ToggleButtonRecoloured}"
            TabIndex="1">
            <mctl:ToggleButtonLollo.CheckedContent>
                <TextBlock Text="Local" Style="{StaticResource BaseMessageStyle}" VerticalAlignment="Center"/>
            </mctl:ToggleButtonLollo.CheckedContent>
            <mctl:ToggleButtonLollo.UncheckedContent>
                <TextBlock Text="Remote" Style="{StaticResource BaseMessageStyle}" VerticalAlignment="Center"/>
            </mctl:ToggleButtonLollo.UncheckedContent>
        </mctl:ToggleButtonLollo>
        <TextBlock Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="3"
			Text="{x:Bind MapsPanelVM.PersistentData.TestTileSource.TileSourceFolderPath, Mode=OneWay}"
			TextWrapping="Wrap"
            VerticalAlignment="Center"
            Visibility="{x:Bind MapsPanelVM.PersistentData.TestTileSource.IsFileSource, Mode=OneWay, Converter={StaticResource BooleanToVisibleConverter}}"/>
        <AppBarButton Grid.Row="3" Grid.Column="3"
			Click="OnPickFolderClicked"
            Icon="OpenFile"
			Style="{StaticResource AppBarButtonRecolouredCompact}"
            Visibility="{x:Bind MapsPanelVM.PersistentData.TestTileSource.IsFileSource, Mode=OneWay, Converter={StaticResource BooleanToVisibleConverter}}"/>
        <Grid Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="3"
            VerticalAlignment="Center"
            Visibility="{x:Bind MapsPanelVM.PersistentData.TestTileSource.IsFileSource, Mode=OneWay, Converter={StaticResource BooleanToCollapsedConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!--ItemsSource="{Binding ElementName=me, Path=MapsPanelVM.PersistentData.TestTileSource.UriStrings, Mode=OneWay}"-->
            <!--ItemsSource="{x:Bind MapsPanelVM.PersistentData.TestTileSource.UriStrings, Mode=OneWay}"-->
            <ItemsControl x:Name="UriStringsIC"
                ItemsSource="{Binding ElementName=me, Path=MapsPanelVM.PersistentData.TestTileSource.UriStrings, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                VerticalAlignment="Center">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ItemsStackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <AppBarButton
			                    Click="OnRemoveUriString_Click"
                                Icon="Clear"
			                    Style="{StaticResource AppBarButtonRecolouredCompact}"/>
                            <TextBox Grid.Column="1"
			                    InputScope="Url"
                                PlaceholderText="{Binding ElementName=me, Path=MapsPanelVM.SampleRemoteUriString}"
                                Text="{Binding Path=Str, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
			                    TextWrapping="Wrap"
			                    VerticalAlignment="Center"/>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <AppBarButton Grid.Row="1"
			    Click="OnAddUriString_Click"
                Icon="Add"
			    Style="{StaticResource AppBarButtonRecolouredCompact}"/>
        </Grid>
        <TextBox Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="3"
			Text="{Binding ElementName=me, Path=MapsPanelVM.PersistentData.TestTileSource.TileSourceFileName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
			TextWrapping="Wrap"
			InputScope="Url"
            PlaceholderText="{x:Bind MapsPanelVM.SampleLocalUriString, Mode=OneWay}"
			VerticalAlignment="Center"
            Visibility="{x:Bind MapsPanelVM.PersistentData.TestTileSource.IsFileSource, Mode=OneWay, Converter={StaticResource BooleanToVisibleConverter}}"/>
        <Grid Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="3"
            VerticalAlignment="Center"
            Visibility="{x:Bind MapsPanelVM.PersistentData.TestTileSource.IsFileSource, Mode=OneWay, Converter={StaticResource BooleanToCollapsedConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ItemsControl x:Name="RequestHeadersIC"
                ItemsSource="{Binding ElementName=me, Path=MapsPanelVM.RequestHeaders, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                VerticalAlignment="Center">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ItemsStackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <AppBarButton
			                    Click="OnRemoveRequestHeader_Click"
                                Icon="Clear"
			                    Style="{StaticResource AppBarButtonRecolouredCompact}"/>
                            <TextBox Grid.Column="1"
			                    InputScope="Url"
                                PlaceholderText="Type a header key"
                                Text="{Binding Path=Key, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
			                    TextWrapping="Wrap"
			                    VerticalAlignment="Center"/>
                            <TextBox Grid.Column="2"
			                    InputScope="Url"
                                PlaceholderText="Type a header value"
                                Text="{Binding Path=Val, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
			                    TextWrapping="Wrap"
			                    VerticalAlignment="Center"/>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <AppBarButton Grid.Row="1"
			    Click="OnAddRequestHeader_Click"
                Icon="Add"
			    Style="{StaticResource AppBarButtonRecolouredCompact}"/>
        </Grid>
        <TextBox Grid.Row="6" Grid.Column="1"
			Text="{Binding ElementName=me, Path=MapsPanelVM.PersistentData.TestTileSource.MinZoom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
			TextWrapping="Wrap"
			MaxLength="2"
			InputScope="Number"
			VerticalAlignment="Center"/>
        <TextBox Grid.Row="6" Grid.Column="3"
			Text="{Binding ElementName=me, Path=MapsPanelVM.PersistentData.TestTileSource.MaxZoom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
			TextWrapping="Wrap"
			MaxLength="2"
			InputScope="Number"
			VerticalAlignment="Center"/>
        <TextBox Grid.Row="7" Grid.Column="1"
			Text="{Binding ElementName=me, Path=MapsPanelVM.PersistentData.TestTileSource.TilePixelSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
			TextWrapping="Wrap"
			MaxLength="3"
			InputScope="Number"
			VerticalAlignment="Center"/>
        <CheckBox Grid.Row="7" Grid.Column="3"
            VerticalAlignment="Center"
            IsChecked="{Binding ElementName=me, Path=MapsPanelVM.PersistentData.TestTileSource.IsOverlay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <!-- error message after clicking test -->
        <TextBlock Grid.Row="8" Grid.ColumnSpan="4"
			Text="{x:Bind MapsPanelVM.TestTileSourceErrorMsg, Mode=OneWay}"
			TextWrapping="Wrap"
			Foreground="{StaticResource FlashyForeground}"
			Style="{StaticResource BaseMessageStyle}"
			Margin="8,2,2,2"
			HorizontalAlignment="Right"
			VerticalAlignment="Center"/>
        <AppBarButton Grid.Row="9" Grid.Column="3"
			Click="OnTestClicked"
            Icon="Accept"
			IsEnabled="{x:Bind MapsPanelVM.IsTestCustomTileSourceEnabled, Mode=OneWay}"
			Style="{StaticResource AppBarButtonRecolouredCompact}"/>
        <!-- error message: no connection -->
        <TextBlock Grid.Row="10" Grid.ColumnSpan="4"
            Text="No connection"
            TextWrapping="Wrap"
            Foreground="{StaticResource FlashyForeground}"
            Style="{StaticResource BaseMessageStyle}"
            Margin="8,2,2,2"
			VerticalAlignment="Center"
			HorizontalAlignment="Right"
			Visibility="{x:Bind MapsPanelVM.RuntimeData.IsConnectionAvailable, Converter={StaticResource BooleanToCollapsedConverter}, Mode=OneWay}"/>
        <AppBarButton Grid.Row="11" Grid.Column="3"
			Click="OnClearCustomTileSource_Click"
			Icon="Delete"
            IsEnabled="{x:Bind MapsPanelVM.IsClearCustomCacheEnabled, Mode=OneWay}"
            Style="{StaticResource AppBarButtonRecolouredCompact}"/>
        <uctl:LolloMultipleListChooser Grid.Row="11" Grid.Column="3"
			x:Name="ClearCustomCacheChooser"
            BackPressedRaiser="{x:Bind Path=MainVM, Mode=OneWay}"
			ItemSelected="OnClearCustomCacheChooser_ItemSelected"
            ItemsSource="{x:Bind MapsPanelVM.PersistentData.TileSourcez, Converter={StaticResource TileSourcezToTextAndTagsConverter}, ConverterParameter=forClearingCustomCache, Mode=OneWay}"
            ListHeaderText="Which source do you want to erase?"
            PlaceholderText="Which source do you want to erase?"
			PopupContainer="{x:Bind LayoutRoot, Mode=OneWay}"
            SelectorVisibility="Collapsed"/>
    </Grid>
</uctl:OpenableObservableControl>
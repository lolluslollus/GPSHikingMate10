<ctl:ObservableControl
    x:Class="LolloGPS.Core.PointsPanel"
    x:Name="me"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:ctl="using:Utilz.Controlz"
    UseLayoutRounding="True"
    mc:Ignorable="d"
    d:DesignHeight="800"
    d:DesignWidth="400">

	<Grid Background="{ThemeResource FlyoutBackgroundThemeBrush}">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="{StaticResource GridSize4Placeholder_Small}"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="4*"/>
			<ColumnDefinition Width="1*"/>
		</Grid.ColumnDefinitions>
		<!--target float-->
		<StackPanel Grid.Row="0" Grid.Column="0"
			Orientation="Vertical"
            Visibility="{Binding IsShowDegrees, Converter={StaticResource BooleanToCollapsedConverter}}" >
			<!-- lat float -->
			<TextBlock
                Text="Latitude" 
                Style="{StaticResource BaseMessageStyle}"
                VerticalAlignment="Center" />
			<ctl:UniversalWrapPanel Orientation="Horizontal">
				<Button Tapped="OnLatSign_Tapped"
					VerticalAlignment="Center">
					<TextBlock
						VerticalAlignment="Center"
						Style="{StaticResource BaseMessageStyle}"
						TextAlignment="Center"
						Text="{Binding Target.Latitude, Converter={StaticResource FloatToSignConverter}}"/>
				</Button>
				<TextBox
					x:Name="LatFloat"
					VerticalAlignment="Center"
					Style="{StaticResource BaseTextBoxStyle}"
					Text="{Binding Target.Latitude, Converter={StaticResource FloatConverter8DecimalsAbs}}" 
					InputScope="NumberFullWidth" 
					LostFocus="OnLatFloat_LostFocus"/>
			</ctl:UniversalWrapPanel>
			<!-- lon float -->
			<TextBlock
                Text="Longitude" 
                Style="{StaticResource BaseMessageStyle}"
                VerticalAlignment="Center" />
			<ctl:UniversalWrapPanel Orientation="Horizontal">
				<Button Tapped="OnLonSign_Tapped"
					VerticalAlignment="Center">
					<TextBlock
						VerticalAlignment="Center"
						Style="{StaticResource BaseMessageStyle}"
						TextAlignment="Center"
						Text="{Binding Target.Longitude, Converter={StaticResource FloatToSignConverter}}"/>
				</Button>
				<TextBox
					x:Name="LonFloat"
					VerticalAlignment="Center"
					Style="{StaticResource BaseTextBoxStyle}"
					Text="{Binding Target.Longitude, Converter={StaticResource FloatConverter8DecimalsAbs}}" 
					InputScope="NumberFullWidth"
					LostFocus="OnLonFloat_LostFocus"/>
			</ctl:UniversalWrapPanel>
		</StackPanel>
		<!--target in degrees min sec dec-->
		<StackPanel Grid.Row="1" Grid.Column="0"
			Orientation="Vertical"
            Visibility="{Binding IsShowDegrees, Converter={StaticResource BooleanToVisibleConverter}}">
			<!--target lat in deg min sec dec-->
			<TextBlock Text="Latitude"
                VerticalAlignment="Center"
                Style="{StaticResource BaseMessageStyle}" />
			<ctl:UniversalWrapPanel Orientation="Horizontal">
				<TextBox x:Name="LatDeg"
					Style="{StaticResource BaseTextBoxStyle}"
					VerticalAlignment="Center"
					InputScope="NumberFullWidth" 
					Text="{Binding Target.Latitude, Converter={StaticResource AngleConverterDeg_Abs}}"
					LostFocus="OnLatDeg_LostFocus"
					GotFocus="OnLatLon_GotFocus"
					MaxLength="4"/>
				<TextBlock Text="°"
					VerticalAlignment="Center"
					Style="{StaticResource BaseMessageStyle}" />
				<TextBox x:Name="LatMin"
					Style="{StaticResource BaseTextBoxStyle}"
					VerticalAlignment="Center"
					InputScope="NumberFullWidth" 
					Text="{Binding Target.Latitude, Converter={StaticResource AngleConverterMin}}"
					LostFocus="OnLatMin_LostFocus"
					GotFocus="OnLatLon_GotFocus"
					MaxLength="2"/>
				<TextBlock Text="'"
					VerticalAlignment="Center"
					Style="{StaticResource BaseMessageStyle}" />
				<TextBox x:Name="LatSec"
					VerticalAlignment="Center"
					Style="{StaticResource BaseTextBoxStyle}"
					InputScope="NumberFullWidth" 
					Text="{Binding Target.Latitude, Converter={StaticResource AngleConverterSec}}"
					LostFocus="OnLatSec_LostFocus"
					GotFocus="OnLatLon_GotFocus"
					MaxLength="2"/>
				<TextBlock Text="''"
					VerticalAlignment="Center"
					Style="{StaticResource BaseMessageStyle}" />
				<TextBox x:Name="LatDec"
					VerticalAlignment="Center"
					Style="{StaticResource BaseTextBoxStyle}"
					InputScope="NumberFullWidth" 
					Text="{Binding Target.Latitude, Converter={StaticResource AngleConverterDec}}" 
					MaxLength="3"
					LostFocus="OnLatDec_LostFocus"
					GotFocus="OnLatLon_GotFocus"/>
				<TextBlock Text="."
					VerticalAlignment="Center"
					Style="{StaticResource BaseMessageStyle}" />
				<Button Tapped="OnLatSign_Tapped"
					VerticalAlignment="Center">
					<TextBlock
						VerticalAlignment="Center"
						Style="{StaticResource BaseMessageStyle}"
						TextAlignment="Center"
						Text="{Binding Target.Latitude, Converter={StaticResource FloatLatitudeToNSConverter}}"/>
				</Button>
			</ctl:UniversalWrapPanel>
			<!--target lon in deg min sec dec-->
			<TextBlock Text="Longitude"
                VerticalAlignment="Center"
                Style="{StaticResource BaseMessageStyle}" />
			<ctl:UniversalWrapPanel Orientation="Horizontal">
				<TextBox x:Name="LonDeg"
					VerticalAlignment="Center"
					Style="{StaticResource BaseTextBoxStyle}"
					InputScope="NumberFullWidth" 
					Text="{Binding Target.Longitude, Converter={StaticResource AngleConverterDeg_Abs}}"
					LostFocus="OnLonDeg_LostFocus"
					GotFocus="OnLatLon_GotFocus"
					MaxLength="4"/>
				<TextBlock Text="°"
					VerticalAlignment="Center"
					Style="{StaticResource BaseMessageStyle}" />
				<TextBox x:Name="LonMin"
					VerticalAlignment="Center"
					Style="{StaticResource BaseTextBoxStyle}"
					InputScope="NumberFullWidth" 
					Text="{Binding Target.Longitude, Converter={StaticResource AngleConverterMin}}"
					LostFocus="OnLonMin_LostFocus"
					GotFocus="OnLatLon_GotFocus"
					MaxLength="2"/>
				<TextBlock Text="'"
					VerticalAlignment="Center"
					Style="{StaticResource BaseMessageStyle}" />
				<TextBox x:Name="LonSec"
					VerticalAlignment="Center"
					Style="{StaticResource BaseTextBoxStyle}"
					InputScope="NumberFullWidth" 
					Text="{Binding Target.Longitude, Converter={StaticResource AngleConverterSec}}"
					LostFocus="OnLonSec_LostFocus"
					GotFocus="OnLatLon_GotFocus"
					MaxLength="2"/>
				<TextBlock Text="''"
					VerticalAlignment="Center"
					Style="{StaticResource BaseMessageStyle}" />
				<TextBox x:Name="LonDec"
					VerticalAlignment="Center"
					Style="{StaticResource BaseTextBoxStyle}"
					InputScope="NumberFullWidth" 
					Text="{Binding Target.Longitude, Converter={StaticResource AngleConverterDec}}" 
					LostFocus="OnLonDec_LostFocus"
					GotFocus="OnLatLon_GotFocus"
					MaxLength="3"/>
				<TextBlock Text="."
					VerticalAlignment="Center"
					Style="{StaticResource BaseMessageStyle}"/>
				<Button Tapped="OnLonSign_Tapped"
					VerticalAlignment="Center">
					<TextBlock
						VerticalAlignment="Center"
						Style="{StaticResource BaseMessageStyle}"
						TextAlignment="Center"
						Text="{Binding Target.Longitude, Converter={StaticResource FloatLongitudeToEWConverter}}"/>
				</Button>
			</ctl:UniversalWrapPanel>
		</StackPanel>
		<!-- human description -->
		<TextBlock Grid.Row="2" Grid.Column="0"
            Text="Description"
            Style="{StaticResource BaseMessageStyle}"
            VerticalAlignment="Center" />
		<TextBox Grid.Row="3" Grid.Column="0"
            HorizontalAlignment="Stretch" 
            VerticalAlignment="Center"
            Style="{StaticResource BaseTextBoxStyle}" 
            MaxLength="{StaticResource MaxHumanDescriptionLength}"
            TextWrapping="Wrap" 
            AcceptsReturn="True"
            Text="{Binding Target.HumanDescription, Mode=TwoWay}"
            PlaceholderText="you can type a note here" 
            PreventKeyboardDisplayOnProgrammaticFocus="True"/>
		<!-- hyperlink -->
		<TextBlock Grid.Row="4" Grid.Column="0"
            Text="Hyperlink"
            Style="{StaticResource BaseMessageStyle}"
            VerticalAlignment="Center" />
		<TextBox Grid.Row="5" Grid.Column="0"
            HorizontalAlignment="Stretch" 
            VerticalAlignment="Center"
            Style="{StaticResource BaseTextBoxStyle}" 
            MaxLength="{StaticResource MaxHyperLinkLength}"
            TextWrapping="Wrap" 
            AcceptsReturn="True"
            Text="{Binding Target.HyperLink, Mode=TwoWay}"
            PlaceholderText="you can type a link here" 
            PreventKeyboardDisplayOnProgrammaticFocus="True"/>
		<!-- hyperlink name -->
		<TextBlock Grid.Row="6" Grid.Column="0"
			Visibility="{Binding Target.HyperLink, Converter={StaticResource StringNotEmptyToVisibleConverter}}"
            Text="Hyperlink name"
            Style="{StaticResource BaseMessageStyle}"
            VerticalAlignment="Center" />
		<TextBox Grid.Row="7" Grid.Column="0"
			Visibility="{Binding Target.HyperLink, Converter={StaticResource StringNotEmptyToVisibleConverter}}"
            HorizontalAlignment="Stretch" 
            VerticalAlignment="Center"
            Style="{StaticResource BaseTextBoxStyle}" 
            MaxLength="{StaticResource MaxHumanDescriptionLength}"
            TextWrapping="Wrap" 
            AcceptsReturn="True"
            Text="{Binding Target.HyperLinkText, Mode=TwoWay}"
            PlaceholderText="you can name your link here" 
            PreventKeyboardDisplayOnProgrammaticFocus="True"/>
		<!-- lat lon commands -->
		<Grid Grid.Row="0" Grid.Column="1" Grid.RowSpan="2"
            VerticalAlignment="Center">
			<Grid.RowDefinitions>
				<RowDefinition/>
				<RowDefinition/>
			</Grid.RowDefinitions>
			<!--Label="Show degrees"-->
			<AppBarToggleButton Grid.Row="0"
                IsChecked="{Binding IsShowDegrees, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                IsCompact="True"
                Style="{StaticResource AppBarToggleButtonRecoloured}"
                Icon="Clock"
                TabIndex="2"/>
			<!--Label="Go to target"-->
			<AppBarButton Grid.Row="1"
                Click="OnGotoTarget_Click" 
                IsCompact="True"
                Style="{StaticResource AppBarButtonRecoloured}"
                Icon="View"
                TabIndex="1"/>
		</Grid>

		<!-- hyperlink commands -->
		<AppBarButton Grid.Row="4" Grid.Column="1" Grid.RowSpan="4"
			IsEnabled="{Binding Target.HyperLink, Converter={StaticResource StringNotEmptyToTrueConverter}}"
            VerticalAlignment="Center"
            Click="OnHyperlink_Click"
            IsCompact="True"
            Style="{StaticResource AppBarButtonRecoloured}"
            Icon="View"/>

		<!--target commands-->
		<TextBlock Grid.Row="9" Grid.Column="0"
            VerticalAlignment="Center"
            Style="{StaticResource BaseMessageStyle}"
            TextWrapping="WrapWholeWords"
            Text="Add / merge this point into your checkpoints"/>
		<AppBarButton Grid.Row="9" Grid.Column="1"
            VerticalAlignment="Center"
            Click="OnAddTargetToCheckpoints_Click"
            IsCompact="True"
            Foreground="{StaticResource CheckpointBrushOpaque}"
            Style="{StaticResource AppBarButtonRecoloured}"
            Icon="Add"/>

		<!-- too many checkpoints notice-->
		<TextBlock Grid.Row="10" Grid.Column="0"
            VerticalAlignment="Center" 
            TextWrapping="Wrap"
            Style="{StaticResource BaseMessageStyle}" 
            Text="{Binding MaxRecordsInCheckpointsProp, Converter={StaticResource StringFormatterConverter}, ConverterParameter='Max {0} checkpoints!'}"
            Foreground="{StaticResource FlashyForeground}"
            Visibility="{Binding Checkpoints.Count, Converter={StaticResource CheckpointCountEqualMaxToVisibleConverter}, UpdateSourceTrigger=PropertyChanged}"/>

		<TextBlock Grid.Row="11" Grid.Column="0"
            VerticalAlignment="Center"
            Style="{StaticResource BaseMessageStyle}"
            TextWrapping="WrapWholeWords"
            Text="Add the current location to your checkpoints"/>
		<ContentControl Grid.Row="11" Grid.Column="1"
            VerticalAlignment="Center"
			IsEnabled="{Binding Checkpoints.Count, Converter={StaticResource CheckpointCountLowerThanMaxToTrueConverter}, UpdateSourceTrigger=PropertyChanged}">
			<AppBarButton
				VerticalAlignment="Center"
				IsEnabled="{Binding ElementName=me, Path=MainVM.GPSInteractor.IsGPSWorking, Converter={StaticResource TrueToFalseConverter}}"
				Click="OnSetTargetToCurrentPoint_Click" 
				IsCompact="True"
				Foreground="{StaticResource CheckpointBrushOpaque}"
				Style="{StaticResource AppBarButtonRecoloured}"
				Icon="Map"/>
		</ContentControl>

		<TextBlock Grid.Row="12" Grid.Column="0"
            VerticalAlignment="Center" 
            Style="{StaticResource BaseMessageStyle}"
            TextWrapping="WrapWholeWords"
            Text="Move around the map and tap the aim to add a checkpoint. Hold the aim to hide it."/>
		<ContentControl Grid.Row="12" Grid.Column="1"
            VerticalAlignment="Center"
			IsEnabled="{Binding Checkpoints.Count, Converter={StaticResource CheckpointCountLowerThanMaxToTrueConverter}, UpdateSourceTrigger=PropertyChanged}">
			<AppBarToggleButton
				VerticalAlignment="Center"
				IsChecked="{Binding IsShowAim, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
				IsCompact="True"
				Foreground="{StaticResource CheckpointBrushOpaque}"
				Style="{StaticResource AppBarToggleButtonRecoloured}"
				Click="OnAim_Click">
				<AppBarToggleButton.Icon>
					<BitmapIcon UriSource="ms-appx:///Assets/aim-36.png"/>
				</AppBarToggleButton.Icon>
			</AppBarToggleButton>
		</ContentControl>

		<TextBlock Grid.Row="13" Grid.Column="0"
            VerticalAlignment="Center" 
            Style="{StaticResource BaseMessageStyle}"
            TextWrapping="WrapWholeWords"
            Text="Move around the map and tap the aim to add one checkpoint"/>
		<ContentControl Grid.Row="13" Grid.Column="1"
            VerticalAlignment="Center"
			IsEnabled="{Binding Checkpoints.Count, Converter={StaticResource CheckpointCountLowerThanMaxToTrueConverter}, UpdateSourceTrigger=PropertyChanged}">
			<AppBarToggleButton
				VerticalAlignment="Center"
				IsChecked="{Binding IsShowAim, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
				IsCompact="True"
				Foreground="{StaticResource CheckpointBrushOpaque}"
				Style="{StaticResource AppBarToggleButtonRecoloured}"
				Click="OnAimOnce_Click">
				<AppBarToggleButton.Icon>
					<BitmapIcon UriSource="ms-appx:///Assets/aimOnce-36.png"/>
				</AppBarToggleButton.Icon>
			</AppBarToggleButton>
		</ContentControl>

		<TextBlock Grid.Row="14" Grid.Column="0"
            VerticalAlignment="Center" 
            Style="{StaticResource BaseMessageStyle}"
            TextWrapping="WrapWholeWords"
            Text="Clear checkpoints"/>
		<AppBarButton Grid.Row="14" Grid.Column="1"
			VerticalAlignment="Center"
			IsCompact="True"
			Foreground="{StaticResource CheckpointBrushOpaque}"
			Style="{StaticResource AppBarButtonRecoloured}"
			Click="OnClearCheckpoints_Click" 
			Icon="Delete"
			IsEnabled="{Binding Checkpoints.Count, Converter={StaticResource SeriesCountGreaterThanZeroToBooleanConverter}, UpdateSourceTrigger=PropertyChanged}"/>

	</Grid>
</ctl:ObservableControl>
